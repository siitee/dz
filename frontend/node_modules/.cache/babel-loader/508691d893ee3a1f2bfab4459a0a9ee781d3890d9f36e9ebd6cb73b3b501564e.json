{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\murof\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\react\\\\frontend\\\\src\\\\views\\\\Main.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import './Main.css';\n// import Product from '../components/Product';\n// import images from '../images/acrap.jpg';\n\n// function Main() {\n\n//   const [products, setProducts] = useState([]);\n\n//   useEffect(() => {\n//     const api = 'http://localhost:9001/products';\n\n//     fetch(api)\n//         .then(response => {\n//             if (!response.ok) {\n//                 throw new Error('Сеть ответила с ошибкой');\n//             }\n//             return response.json();\n//         })\n//         .then(result => {\n//             console.log(\"Ответ сервера:\", result);  // Логируем ответ\n//             if (!result || typeof result !== 'object') {\n//                 console.error(\"Ответ не является объектом:\", result);\n//             } else if (!Array.isArray(result.data)) {\n//                 console.error(\"Ожидалось, что result.data будет массивом. Получено:\", result.data);\n//             } else {\n//                 setProducts(result.data);  // Присваиваем данные\n//             }\n//         })\n//         .catch(error => {\n//             console.error(\"Произошла ошибка при получении данных:\", error);\n//         });\n// }, []);\n\n//   return (\n//     <div className=\"Main\">\n//       {Array.isArray(products) && products.length > 0 ? (\n//         products.map(item => (\n//           <Product key={item.id} images={images} title={item.title} price={item.price} />\n//         ))\n//       ) : (\n//         <p>No products available.</p>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default Main;\n\n// import React, {useState, useEffect} from 'react';\n// import './Main.css';\n// import Product from '../components/Product';\n// import images from '../images/acrap.jpg';\n\n// function Main() {\n\n//   const[products, setProducts] = useState([])\n\n//   useEffect(() => {\n\n//     const api = 'http://localhost:9001/products'\n\n//     fetch(api)\n//     .then(result => result.json())\n//     .then((result) =>{\n//       console.log(result)\n//       setProducts(result.data)\n//     })\n//   }, [])\n\n//   return (\n//     <div className=\"Main\">\n//       {products.map((item) => <Product key={item.id} images={images} title={item.title} price={item.price}/>)}\n//     </div>\n//   );\n// }\n// export default Main;\n\nimport React, { useState, useEffect } from 'react';\nimport './Main.css';\nimport Product from '../components/Product';\nimport images from '../images/acrap.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main() {\n  _s();\n  const [products, setProducts] = useState([]); // Изначально массив пустой\n  const [loading, setLoading] = useState(true); // Флаг загрузки\n  const [error, setError] = useState(null); // Для обработки ошибок\n\n  useEffect(() => {\n    const api = 'http://localhost:9001/products';\n    fetch(api).then(result => {\n      if (!result.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return result.json();\n    }).then(data => {\n      console.log(data);\n\n      // Проверка на наличие данных в правильной структуре\n      setProducts(data.data || []); // Устанавливаем пустой массив, если data отсутствует\n    }).catch(error => {\n      console.error('There was a problem with the fetch operation:', error);\n      setError(error.message);\n    }).finally(() => {\n      setLoading(false); // Устанавливаем загрузку в false после завершения запроса\n    });\n  }, []); // Пустой массив зависимостей, чтобы эффект исполнялся только один раз\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 23\n  }, this); // Сообщение о загрузке\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 21\n  }, this); // Сообщение об ошибке\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Main\",\n    children: products.map(item => /*#__PURE__*/_jsxDEV(Product, {\n      images: images,\n      title: item.title,\n      price: item.price\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"3+N/VFIgZOBgubN9oS5aTzm2qqY=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","Product","images","jsxDEV","_jsxDEV","Main","_s","products","setProducts","loading","setLoading","error","setError","api","fetch","then","result","ok","Error","json","data","console","log","catch","message","finally","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","item","title","price","id","_c","$RefreshReg$"],"sources":["C:/Users/murof/OneDrive/Рабочий стол/react/frontend/src/views/Main.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import './Main.css';\r\n// import Product from '../components/Product';\r\n// import images from '../images/acrap.jpg';\r\n\r\n// function Main() {\r\n  \r\n//   const [products, setProducts] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     const api = 'http://localhost:9001/products';\r\n\r\n//     fetch(api)\r\n//         .then(response => {\r\n//             if (!response.ok) {\r\n//                 throw new Error('Сеть ответила с ошибкой');\r\n//             }\r\n//             return response.json();\r\n//         })\r\n//         .then(result => {\r\n//             console.log(\"Ответ сервера:\", result);  // Логируем ответ\r\n//             if (!result || typeof result !== 'object') {\r\n//                 console.error(\"Ответ не является объектом:\", result);\r\n//             } else if (!Array.isArray(result.data)) {\r\n//                 console.error(\"Ожидалось, что result.data будет массивом. Получено:\", result.data);\r\n//             } else {\r\n//                 setProducts(result.data);  // Присваиваем данные\r\n//             }\r\n//         })\r\n//         .catch(error => {\r\n//             console.error(\"Произошла ошибка при получении данных:\", error);\r\n//         });\r\n// }, []);\r\n\r\n//   return (\r\n//     <div className=\"Main\">\r\n//       {Array.isArray(products) && products.length > 0 ? (\r\n//         products.map(item => (\r\n//           <Product key={item.id} images={images} title={item.title} price={item.price} />\r\n//         ))\r\n//       ) : (\r\n//         <p>No products available.</p>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Main;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, {useState, useEffect} from 'react';\r\n// import './Main.css';\r\n// import Product from '../components/Product';\r\n// import images from '../images/acrap.jpg';\r\n\r\n// function Main() {\r\n\r\n//   const[products, setProducts] = useState([])\r\n\r\n//   useEffect(() => {\r\n\r\n//     const api = 'http://localhost:9001/products'\r\n\r\n//     fetch(api)\r\n//     .then(result => result.json())\r\n//     .then((result) =>{\r\n//       console.log(result)\r\n//       setProducts(result.data)\r\n//     })\r\n//   }, [])\r\n\r\n//   return (\r\n//     <div className=\"Main\">\r\n//       {products.map((item) => <Product key={item.id} images={images} title={item.title} price={item.price}/>)}\r\n//     </div>\r\n//   );\r\n// }\r\n// export default Main;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport './Main.css';\r\nimport Product from '../components/Product';\r\nimport images from '../images/acrap.jpg';\r\n\r\nfunction Main() {\r\n  const [products, setProducts] = useState([]); // Изначально массив пустой\r\n  const [loading, setLoading] = useState(true); // Флаг загрузки\r\n  const [error, setError] = useState(null); // Для обработки ошибок\r\n\r\n  useEffect(() => {\r\n    const api = 'http://localhost:9001/products';\r\n\r\n    fetch(api)\r\n      .then((result) => {\r\n        if (!result.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        return result.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n        \r\n        // Проверка на наличие данных в правильной структуре\r\n        setProducts(data.data || []); // Устанавливаем пустой массив, если data отсутствует\r\n      })\r\n      .catch((error) => {\r\n        console.error('There was a problem with the fetch operation:', error);\r\n        setError(error.message);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false); // Устанавливаем загрузку в false после завершения запроса\r\n      });\r\n  }, []); // Пустой массив зависимостей, чтобы эффект исполнялся только один раз\r\n\r\n  if (loading) return <div>Загрузка...</div>; // Сообщение о загрузке\r\n  if (error) return <div>Ошибка: {error}</div>; // Сообщение об ошибке\r\n\r\n  return (\r\n    <div className=\"Main\">\r\n      {products.map((item) => (\r\n        <Product key={item.id} images={images} title={item.title} price={item.price} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}