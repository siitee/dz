{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\murof\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\react\\\\frontend\\\\src\\\\views\\\\Main.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Main.css';\nimport Product from '../components/Product';\nimport images from '../images/acrap.jpg';\n\n// function Main() {\n\n//   const[products, setProducts] = useState([])\n\n//   useEffect(() => {\n\n//     const api = 'http://localhost:9001/products'\n\n//     fetch(api)\n//     .then(resulst => resulst.json())\n//     .then((resulst) => {\n//       console.log(resulst);\n//       setProducts(resulst.data)\n//     })\n\n//   }, [])\n\n//   return (\n//     <div className=\"Main\">\n//       { Array.isArray(products) && products.map((item) => (\n//         <Product key={item.id} header={item.header} images={images} price={item.price} />\n//       ))}\n//     </div>\n//   );\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const [results, setResults] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:9001/products');\n        const data = await response.json();\n        setResults(data.message); // Тут мы получаем данные из 'message'\n      } catch (error) {\n        console.error('Ошибка при загрузке данных:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0442\\u043E\\u0432\\u0430\\u0440\\u043E\\u0432\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }, this), results.length > 0 ? results.map(product => /*#__PURE__*/_jsxDEV(Product, {\n      header: product.header,\n      price: product.price\n    }, product.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0442\\u043E\\u0432\\u0430\\u0440\\u043E\\u0432...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }, this);\n};\n_s(Main, \"0Oir8sO9qj6087fqVYj2OrfQH1E=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","Product","images","jsxDEV","_jsxDEV","Main","_s","results","setResults","fetchData","response","fetch","data","json","message","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","product","header","price","id","_c","$RefreshReg$"],"sources":["C:/Users/murof/OneDrive/Рабочий стол/react/frontend/src/views/Main.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport './Main.css';\r\nimport Product from '../components/Product';\r\nimport images from '../images/acrap.jpg'\r\n\r\n// function Main() {\r\n\r\n//   const[products, setProducts] = useState([])\r\n\r\n//   useEffect(() => {\r\n\r\n//     const api = 'http://localhost:9001/products'\r\n\r\n//     fetch(api)\r\n//     .then(resulst => resulst.json())\r\n//     .then((resulst) => {\r\n//       console.log(resulst);\r\n//       setProducts(resulst.data)\r\n//     })\r\n\r\n//   }, [])\r\n\r\n//   return (\r\n//     <div className=\"Main\">\r\n//       { Array.isArray(products) && products.map((item) => (\r\n//         <Product key={item.id} header={item.header} images={images} price={item.price} />\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// }\r\nconst Main = () => {\r\n  const [results, setResults] = useState([]);\r\n\r\n  useEffect(() => {\r\n      const fetchData = async () => {\r\n          try {\r\n              const response = await fetch('http://localhost:9001/products');\r\n              const data = await response.json();\r\n              setResults(data.message); // Тут мы получаем данные из 'message'\r\n          } catch (error) {\r\n              console.error('Ошибка при загрузке данных:', error);\r\n          }\r\n      };\r\n\r\n      fetchData();\r\n  }, []);\r\n\r\n  return (\r\n      <div>\r\n          <h1>Список товаров</h1>\r\n          {results.length > 0 ? (\r\n              results.map(product => (\r\n                  <Product key={product.id} header={product.header} price={product.price} />\r\n              ))\r\n          ) : (\r\n              <p>Загрузка товаров...</p>\r\n          )}\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Main;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAO,YAAY;AACnB,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,MAAM,MAAM,qBAAqB;;AAExC;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACZ,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,CAAC;QAC9D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCL,UAAU,CAACI,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC;MAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACvD;IACJ,CAAC;IAEDN,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAAa,QAAA,gBACIb,OAAA;MAAAa,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtBd,OAAO,CAACe,MAAM,GAAG,CAAC,GACff,OAAO,CAACgB,GAAG,CAACC,OAAO,iBACfpB,OAAA,CAACH,OAAO;MAAkBwB,MAAM,EAAED,OAAO,CAACC,MAAO;MAACC,KAAK,EAAEF,OAAO,CAACE;IAAM,GAAzDF,OAAO,CAACG,EAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiD,CAC5E,CAAC,gBAEFjB,OAAA;MAAAa,QAAA,EAAG;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC5B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEZ,CAAC;AAACf,EAAA,CA7BID,IAAI;AAAAuB,EAAA,GAAJvB,IAAI;AA+BV,eAAeA,IAAI;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}