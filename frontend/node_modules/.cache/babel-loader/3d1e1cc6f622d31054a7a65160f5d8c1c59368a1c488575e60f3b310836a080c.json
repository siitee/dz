{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\murof\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\react\\\\frontend\\\\src\\\\views\\\\Main.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import './Main.css';\n// import Product from '../components/Product';\n// import images from '../images/acrap.jpg';\n\n// function Main() {\n\n//   const [products, setProducts] = useState([]);\n\n//   useEffect(() => {\n//     const api = 'http://localhost:9001/products';\n\n//     fetch(api)\n//         .then(response => {\n//             if (!response.ok) {\n//                 throw new Error('Сеть ответила с ошибкой');\n//             }\n//             return response.json();\n//         })\n//         .then(result => {\n//             console.log(\"Ответ сервера:\", result);  // Логируем ответ\n//             if (!result || typeof result !== 'object') {\n//                 console.error(\"Ответ не является объектом:\", result);\n//             } else if (!Array.isArray(result.data)) {\n//                 console.error(\"Ожидалось, что result.data будет массивом. Получено:\", result.data);\n//             } else {\n//                 setProducts(result.data);  // Присваиваем данные\n//             }\n//         })\n//         .catch(error => {\n//             console.error(\"Произошла ошибка при получении данных:\", error);\n//         });\n// }, []);\n\n//   return (\n//     <div className=\"Main\">\n//       {Array.isArray(products) && products.length > 0 ? (\n//         products.map(item => (\n//           <Product key={item.id} images={images} title={item.title} price={item.price} />\n//         ))\n//       ) : (\n//         <p>No products available.</p>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default Main;\n\nimport React, { useState, useEffect } from 'react';\nimport './Main.css';\nimport Product from '../components/Product';\nimport images from '../images/acrap.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main() {\n  _s();\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    const api = 'http://localhost:9001/products';\n    fetch(api).then(result => result.json()).then(result => {\n      console.log(result);\n      setProducts(result.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Main\",\n    children: products.map(item => /*#__PURE__*/_jsxDEV(Product, {\n      images: images,\n      title: item.title,\n      price: item.price\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 31\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","Product","images","jsxDEV","_jsxDEV","Main","_s","products","setProducts","api","fetch","then","result","json","console","log","data","className","children","map","item","title","price","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/murof/OneDrive/Рабочий стол/react/frontend/src/views/Main.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import './Main.css';\r\n// import Product from '../components/Product';\r\n// import images from '../images/acrap.jpg';\r\n\r\n// function Main() {\r\n  \r\n//   const [products, setProducts] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     const api = 'http://localhost:9001/products';\r\n\r\n//     fetch(api)\r\n//         .then(response => {\r\n//             if (!response.ok) {\r\n//                 throw new Error('Сеть ответила с ошибкой');\r\n//             }\r\n//             return response.json();\r\n//         })\r\n//         .then(result => {\r\n//             console.log(\"Ответ сервера:\", result);  // Логируем ответ\r\n//             if (!result || typeof result !== 'object') {\r\n//                 console.error(\"Ответ не является объектом:\", result);\r\n//             } else if (!Array.isArray(result.data)) {\r\n//                 console.error(\"Ожидалось, что result.data будет массивом. Получено:\", result.data);\r\n//             } else {\r\n//                 setProducts(result.data);  // Присваиваем данные\r\n//             }\r\n//         })\r\n//         .catch(error => {\r\n//             console.error(\"Произошла ошибка при получении данных:\", error);\r\n//         });\r\n// }, []);\r\n\r\n//   return (\r\n//     <div className=\"Main\">\r\n//       {Array.isArray(products) && products.length > 0 ? (\r\n//         products.map(item => (\r\n//           <Product key={item.id} images={images} title={item.title} price={item.price} />\r\n//         ))\r\n//       ) : (\r\n//         <p>No products available.</p>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Main;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, {useState, useEffect} from 'react';\r\nimport './Main.css';\r\nimport Product from '../components/Product';\r\nimport images from '../images/acrap.jpg'\r\n\r\nfunction Main() {\r\n\r\n  const[products, setProducts] = useState([])\r\n\r\n  useEffect(() => {\r\n\r\n    const api = 'http://localhost:9001/products'\r\n\r\n    fetch(api)\r\n    .then(result => result.json())\r\n    .then((result) =>{\r\n      console.log(result)\r\n      setProducts(result.data)\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"Main\">\r\n      {products.map((item) => <Product key={item.id} images={images} title={item.title} price={item.price}/>)}\r\n    </div>\r\n  );\r\n}\r\nexport default Main;"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAiBA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAO,YAAY;AACnB,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,MAAM,MAAM,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAEd,MAAK,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE3CC,SAAS,CAAC,MAAM;IAEd,MAAMS,GAAG,GAAG,gCAAgC;IAE5CC,KAAK,CAACD,GAAG,CAAC,CACTE,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACC,IAAI,CAAC,CAAC,CAAC,CAC7BF,IAAI,CAAEC,MAAM,IAAI;MACfE,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;MACnBJ,WAAW,CAACI,MAAM,CAACI,IAAI,CAAC;IAC1B,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEZ,OAAA;IAAKa,SAAS,EAAC,MAAM;IAAAC,QAAA,EAClBX,QAAQ,CAACY,GAAG,CAAEC,IAAI,iBAAKhB,OAAA,CAACH,OAAO;MAAeC,MAAM,EAAEA,MAAO;MAACmB,KAAK,EAAED,IAAI,CAACC,KAAM;MAACC,KAAK,EAAEF,IAAI,CAACE;IAAM,GAA9DF,IAAI,CAACG,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAwD,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpG,CAAC;AAEV;AAACrB,EAAA,CArBQD,IAAI;AAAAuB,EAAA,GAAJvB,IAAI;AAsBb,eAAeA,IAAI;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}