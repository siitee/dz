{"ast":null,"code":"var _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import './Main.css';\n// import Product from '../components/Product';\n// import images from '../images/acrap.jpg';\n\n// function Main() {\n\n//   const [products, setProducts] = useState([]);\n\n//   useEffect(() => {\n//     const api = 'http://localhost:9001/products';\n\n//     fetch(api)\n//         .then(response => {\n//             if (!response.ok) {\n//                 throw new Error('Сеть ответила с ошибкой');\n//             }\n//             return response.json();\n//         })\n//         .then(result => {\n//             console.log(\"Ответ сервера:\", result);  // Логируем ответ\n//             if (!result || typeof result !== 'object') {\n//                 console.error(\"Ответ не является объектом:\", result);\n//             } else if (!Array.isArray(result.data)) {\n//                 console.error(\"Ожидалось, что result.data будет массивом. Получено:\", result.data);\n//             } else {\n//                 setProducts(result.data);  // Присваиваем данные\n//             }\n//         })\n//         .catch(error => {\n//             console.error(\"Произошла ошибка при получении данных:\", error);\n//         });\n// }, []);\n\n//   return (\n//     <div className=\"Main\">\n//       {Array.isArray(products) && products.length > 0 ? (\n//         products.map(item => (\n//           <Product key={item.id} images={images} title={item.title} price={item.price} />\n//         ))\n//       ) : (\n//         <p>No products available.</p>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default Main;\n\nimport React, { useState, useEffect } from 'react';\nimport './Main.css';\nimport Product from '../components/Product';\nimport images from '../images/acrap.jpg';\nfunction Main() {\n  _s();\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    const api = 'http://localhost:9001/products';\n    fetch(api).then(result => result.json()).then(result => {\n      console.log(result);\n      setProducts(result.data);\n    });\n  }, []);\n\n  // return (\n  //   <div className=\"Main\">\n  //     {products.map((item) => <Product key={item.id} images={images} title={item.title} price={item.price}/>)}\n  //   </div>\n  // );\n}\n_s(Main, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n_c = Main;\nexport default Main;\n\n// import React, { useState, useEffect } from 'react';\n// import './Main.css';\n// import Product from '../components/Product';\n// import images from '../images/acrap.jpg';\n\n// function Main() {\n//   const [products, setProducts] = useState([]); // Изначально массив пустой\n//   const [loading, setLoading] = useState(true); // Флаг загрузки\n//   const [error, setError] = useState(null); // Для обработки ошибок\n\n//   useEffect(() => {\n//     const api = 'http://localhost:9001/products';\n\n//     fetch(api)\n//       .then((result) => {\n//         if (!result.ok) {\n//           throw new Error('Network response was not ok');\n//         }\n//         return result.json();\n//       })\n//       .then((data) => {\n//         console.log(data);\n\n//         // Проверка на наличие данных в правильной структуре\n//         setProducts(data.data || []); // Устанавливаем пустой массив, если data отсутствует\n//       })\n//       .catch((error) => {\n//         console.error('There was a problem with the fetch operation:', error);\n//         setError(error.message);\n//       })\n//       .finally(() => {\n//         setLoading(false); // Устанавливаем загрузку в false после завершения запроса\n//       });\n//   }, []); // Пустой массив зависимостей, чтобы эффект исполнялся только один раз\n\n//   if (loading) return <div>Загрузка...</div>; // Сообщение о загрузке\n//   if (error) return <div>Ошибка: {error}</div>; // Сообщение об ошибке\n\n//   return (\n//     <div className=\"Main\">\n//       {products.map((item) => (\n//         <Product key={item.id} images={images} title={item.title} price={item.price} />\n//       ))}\n//     </div>\n//   );\n// }\n\n// export default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","Product","images","Main","_s","products","setProducts","api","fetch","then","result","json","console","log","data","_c","$RefreshReg$"],"sources":["C:/Users/murof/OneDrive/Рабочий стол/react/frontend/src/views/Main.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import './Main.css';\r\n// import Product from '../components/Product';\r\n// import images from '../images/acrap.jpg';\r\n\r\n// function Main() {\r\n  \r\n//   const [products, setProducts] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     const api = 'http://localhost:9001/products';\r\n\r\n//     fetch(api)\r\n//         .then(response => {\r\n//             if (!response.ok) {\r\n//                 throw new Error('Сеть ответила с ошибкой');\r\n//             }\r\n//             return response.json();\r\n//         })\r\n//         .then(result => {\r\n//             console.log(\"Ответ сервера:\", result);  // Логируем ответ\r\n//             if (!result || typeof result !== 'object') {\r\n//                 console.error(\"Ответ не является объектом:\", result);\r\n//             } else if (!Array.isArray(result.data)) {\r\n//                 console.error(\"Ожидалось, что result.data будет массивом. Получено:\", result.data);\r\n//             } else {\r\n//                 setProducts(result.data);  // Присваиваем данные\r\n//             }\r\n//         })\r\n//         .catch(error => {\r\n//             console.error(\"Произошла ошибка при получении данных:\", error);\r\n//         });\r\n// }, []);\r\n\r\n//   return (\r\n//     <div className=\"Main\">\r\n//       {Array.isArray(products) && products.length > 0 ? (\r\n//         products.map(item => (\r\n//           <Product key={item.id} images={images} title={item.title} price={item.price} />\r\n//         ))\r\n//       ) : (\r\n//         <p>No products available.</p>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Main;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, {useState, useEffect} from 'react';\r\nimport './Main.css';\r\nimport Product from '../components/Product';\r\nimport images from '../images/acrap.jpg';\r\n\r\nfunction Main() {\r\n\r\n  const[products, setProducts] = useState([])\r\n\r\n  useEffect(() => {\r\n\r\n    const api = 'http://localhost:9001/products'\r\n\r\n    fetch(api)\r\n    .then(result => result.json())\r\n    .then((result) =>{\r\n      console.log(result)\r\n      setProducts(result.data)\r\n    })\r\n  }, [])\r\n\r\n  // return (\r\n  //   <div className=\"Main\">\r\n  //     {products.map((item) => <Product key={item.id} images={images} title={item.title} price={item.price}/>)}\r\n  //   </div>\r\n  // );\r\n}\r\nexport default Main;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import './Main.css';\r\n// import Product from '../components/Product';\r\n// import images from '../images/acrap.jpg';\r\n\r\n// function Main() {\r\n//   const [products, setProducts] = useState([]); // Изначально массив пустой\r\n//   const [loading, setLoading] = useState(true); // Флаг загрузки\r\n//   const [error, setError] = useState(null); // Для обработки ошибок\r\n\r\n//   useEffect(() => {\r\n//     const api = 'http://localhost:9001/products';\r\n\r\n//     fetch(api)\r\n//       .then((result) => {\r\n//         if (!result.ok) {\r\n//           throw new Error('Network response was not ok');\r\n//         }\r\n//         return result.json();\r\n//       })\r\n//       .then((data) => {\r\n//         console.log(data);\r\n        \r\n//         // Проверка на наличие данных в правильной структуре\r\n//         setProducts(data.data || []); // Устанавливаем пустой массив, если data отсутствует\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error('There was a problem with the fetch operation:', error);\r\n//         setError(error.message);\r\n//       })\r\n//       .finally(() => {\r\n//         setLoading(false); // Устанавливаем загрузку в false после завершения запроса\r\n//       });\r\n//   }, []); // Пустой массив зависимостей, чтобы эффект исполнялся только один раз\r\n\r\n//   if (loading) return <div>Загрузка...</div>; // Сообщение о загрузке\r\n//   if (error) return <div>Ошибка: {error}</div>; // Сообщение об ошибке\r\n\r\n//   return (\r\n//     <div className=\"Main\">\r\n//       {products.map((item) => (\r\n//         <Product key={item.id} images={images} title={item.title} price={item.price} />\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Main;"],"mappings":";AAAA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAiBA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAO,YAAY;AACnB,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,MAAM,MAAM,qBAAqB;AAExC,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAEd,MAAK,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE3CC,SAAS,CAAC,MAAM;IAEd,MAAMO,GAAG,GAAG,gCAAgC;IAE5CC,KAAK,CAACD,GAAG,CAAC,CACTE,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACC,IAAI,CAAC,CAAC,CAAC,CAC7BF,IAAI,CAAEC,MAAM,IAAI;MACfE,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;MACnBJ,WAAW,CAACI,MAAM,CAACI,IAAI,CAAC;IAC1B,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;EACA;AACF;AAACV,EAAA,CArBQD,IAAI;AAAAY,EAAA,GAAJZ,IAAI;AAsBb,eAAeA,IAAI;;AAiBnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}